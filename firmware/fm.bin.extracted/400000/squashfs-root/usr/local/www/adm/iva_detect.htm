<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> 
<meta name="description" content="RC8510A">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META http-equiv="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-cache">	
<meta HTTP-EQUIV="Expires" CONTENT="Mon, 06 Jan 1990 00:00:01 GMT"> 

<title>Network Camera - Event</title>
<script language="JavaScript" type="text/javascript" src="../plugins.js"></script>
<script language="JavaScript" type="text/javascript" src="../linux.js"></script>
<script language="JavaScript" type="text/javascript" src="../rc8510a_stdlib.js"></script>
<script language="JavaScript" type="text/javascript" src="../message.js"></script>
<script language="JavaScript" type="text/javascript" src="../slider.js"></script>
<script language="JavaScript" type="text/javascript" src="../groupctrl.js"></script>

<!--LINK REL="stylesheet" TYPE="text/css" HREF="m_detect.css"-->

<LINK REL="stylesheet" TYPE="text/css" HREF="../rc8510a_ig_n.css">
<script language="JavaScript" type="text/javascript">
<!-- Start Script

var ic;
var mask_top_val = new Array(0, 0, 0, 0);
var mask_left_val = new Array(0, 0, 0, 0);
var mask_w_val = new Array(0, 0, 0, 0);
var mask_h_val = new Array(0, 0, 0, 0);
var str_width = 0;
var str_height = 0;
var res_idx = 4;
var cur_width = 0;
var cur_height = 0;
var img_height = 180;

function read_od_switch()
{
	var cf = document.forms[0];
	var od_switch;
	var detection_window;
	for (var i = 1; i <= 4; i++)
	{
		od_switch = "od_switch"+i;
		detection_window = "detection_window"+i;
		if (document.getElementById(od_switch).value == "1")
		{	
			document.getElementById(detection_window).checked = true;	
		}
		else
		{
			document.getElementById(detection_window).checked = false;
		}
	}
}

function read_window_name()
{
	for (var i = 1; i <= 4; i++)
	{
		var window_name = "window_name"+i;
		var od_name = "od_name"+i;
		var od_window_name = document.getElementById(od_name).value;
		document.getElementById(window_name).value = od_window_name;
	}
}

function set_window_name(window_id)
{
	var window_name = "window_name"+window_id;
	var od_name = "od_name"+window_id;
	var od_window_name = document.getElementById(window_name).value;
  	document.getElementById(od_name).value = od_window_name;
}

/*function read_od_type()
{
	var cf = document.forms[0];
	for (var i = 1; i <= 4; i++)
	{
		var od_switch = "od_switch"+i;
		var type = "type"+i;
		var en_type = document.getElementsByName(type);
		var od_type = "od_type"+i;
		var type_value = document.getElementById(od_type).value;
		for (var j = 0; j < en_type.length; j++)
		{
			en_type[j].checked = false;
		}
		if (type_value == "3")
		{
			en_type[0].checked = true;
		}
		if (type_value == "1")
		{
			en_type[1].checked = true;
		}
		if (document.getElementById(od_switch).value == "1")
		{
			for (var j = 0; j < en_type.length; j++)
			{
				en_type[j].disabled = 0;
			}					
		}
		else
		{
			for (var j = 0; j < en_type.length; j++)
			{
				en_type[j].disabled = 1;
			}
		}
	}
}*/

function set_all()
{
	read_od_switch();
	read_window_name();
	//read_od_type();
	get_current_resolution();
	var i = 1;
	for (i = 1; i <= 4; i++)
	{
		init_od_window(i);
		show_od_div(i);
	}
}	
	
function init()
{	
	var cf = document.forms[0];
	var read = new GroupCtrl();
	var array_get=[
			["SYSTEM", "model_num", "model_num"],
			["IVA", "od_switch1", "od_switch1"],
			["IVA", "od_switch2", "od_switch2"],
			["IVA", "od_switch3", "od_switch3"],
			["IVA", "od_switch4", "od_switch4"],
			["IVA", "od_name1", "od_name1"],
			["IVA", "od_name2", "od_name2"],
			["IVA", "od_name3", "od_name3"],
			["IVA", "od_name4", "od_name4"],
			["IVA", "od_window1", "od_window1"],
			["IVA", "od_window2", "od_window2"],
			["IVA", "od_window3", "od_window3"],
			["IVA", "od_window4", "od_window4"],
			["VIDEO", "aspect_ratio", "aspect_ratio"],
		];
	read.callback = set_all;
	read.get(array_get);
}

function get_current_resolution()
{
	var cf = document.forms[0];
	var aspect = cf.aspect_ratio.value;
	//alert(aspect);
	if (aspect == "2") {
		cur_width = 960;
		cur_height = 720;
	}
	else {
		cur_width = 1280;
		cur_height = 720;
	}
	//alert("width="+cur_width+", height="+cur_height);
}

function init_od_window(window_id)
{
	var tmp_index = 0;
	var od_window = "od_window"+window_id;
	var position_str = document.getElementById(od_window).value;
	var pos_var = new Array(0, 0, 0, 0);
	var i = 0;
	var tmp_width = 320;
	var tmp_height = 240;
	var offset_x = 0;
	
	var start_idx = position_str.indexOf('/');
	var end_idx = position_str.lastIndexOf(',');
	str_width = position_str.substr(start_idx+1, end_idx-start_idx-1);
	str_height = position_str.substr(end_idx+1, position_str.length-end_idx-1);
	//alert(str_width+","+str_height);
	
	for (i = 0; i < 4; i++)
	{
		tmp_index = position_str.indexOf(',');
		if (tmp_index > 0)
		{
			pos_var[i] = parseInt(position_str.substr(0, tmp_index));
			position_str = position_str.substr(tmp_index+1, position_str.length-tmp_index-1);
		}
		else
		{
			if (i >= 3)
			{
				pos_var[i] = parseInt(position_str);
			}
			break;
		}
	}
	//alert(pos_var[0]+","+pos_var[1]+","+pos_var[2]+","+pos_var[3]);
	
	if (cur_width*str_height == cur_height*str_width)
	{
		if (cur_width*3 == cur_height*4)
		{
			pos_var[0] = pos_var[0]*320/str_width;
			pos_var[1] = pos_var[1]*240/str_height;
			pos_var[2] = pos_var[2]*320/str_width;
			pos_var[3] = pos_var[3]*240/str_height;
		}
		else if (cur_width*9 == cur_height*16)
		{
			tmp_height = cur_height*320/cur_width;
			pos_var[0] = pos_var[0]*320/str_width;
			pos_var[1] = pos_var[1]*320/str_width;
			pos_var[2] = pos_var[2]*320/str_width;
			pos_var[3] = pos_var[3]*320/str_width;
		}
	}
	else if (cur_width*3 == cur_height*4)
	{
		tmp_width = str_width*cur_height/cur_width;
		offset_x = (str_width-tmp_width)/2;
		pos_var[0] = (pos_var[0]-offset_x)*320/tmp_width;
		pos_var[1] = pos_var[1]*320/tmp_width;
		pos_var[2] = (pos_var[2]-offset_x)*320/tmp_width;
		pos_var[3] = pos_var[3]*320/tmp_width;
	}
	else if (cur_width*9 == cur_height*16)
	{
		tmp_height = cur_height*320/cur_width;
		tmp_width = tmp_height*str_width/str_height;
		offset_x = (320-tmp_width)/2;
		pos_var[0] = offset_x + pos_var[0]*tmp_height/str_height;
		pos_var[1] = pos_var[1]*tmp_height/str_height;
		pos_var[2] = offset_x + pos_var[2]*tmp_height/str_height;
		pos_var[3] = pos_var[3]*tmp_height/str_height;
	}
	//alert(pos_var[0]+","+pos_var[1]+","+pos_var[2]+","+pos_var[3]);
	
	//check invalid
	for (i = 0; i < 4; i=i+2)
	{
		if (pos_var[i] < 0)
		{
			pos_var[i] = 0;
		}
		if (pos_var[i] > 319)
		{
			pos_var[i] = 319;
		}
	}
	for (i = 1; i < 4; i=i+2)
	{
		if (pos_var[i] < 0)
		{
			pos_var[i] = 0;
		}
		if (pos_var[i] > 239)
		{
			pos_var[i] = 239;
		}
	}
	//alert(pos_var[0]+","+pos_var[1]+","+pos_var[2]+","+pos_var[3]);
	
	if (pos_var[2] >= pos_var[0] && pos_var[3] >= pos_var[1])
	{
		mask_w_val[window_id-1] = (pos_var[2]-pos_var[0]+1);
		mask_h_val[window_id-1] = (pos_var[3]-pos_var[1]+1);
		mask_top_val[window_id-1] = pos_var[1];
		mask_left_val[window_id-1] = pos_var[0];
	}
	else if (pos_var[2] < pos_var[0] && pos_var[3] < pos_var[1])
	{	
		mask_w_val[window_id-1] = (pos_var[0]-pos_var[2]+1);
		mask_h_val[window_id-1] = (pos_var[1]-pos_var[3]+1);
		mask_top_val[window_id-1] = pos_var[3];
		mask_left_val[window_id-1] = pos_var[2];
	}
	//alert(mask_left_val[window_id-1]+","+mask_top_val[window_id-1]+","+mask_w_val[window_id-1]+","+mask_h_val[window_id-1]);
	
	mask_left_val[window_id-1] = parseInt(mask_left_val[window_id-1]);
	mask_top_val[window_id-1] = parseInt(mask_top_val[window_id-1]);
	mask_w_val[window_id-1] = parseInt(mask_w_val[window_id-1]);
	mask_h_val[window_id-1] = parseInt(mask_h_val[window_id-1]);
	//alert(mask_left_val[window_id-1]+","+mask_top_val[window_id-1]+","+mask_w_val[window_id-1]+","+mask_h_val[window_id-1]);
	
	var dragDiv = "dragDiv"+window_id;
	$(dragDiv).style.left = mask_left_val[window_id-1] + "px";
	$(dragDiv).style.top = mask_top_val[window_id-1] + "px";
	$(dragDiv).style.width = mask_w_val[window_id-1] + "px" ;
	$(dragDiv).style.height = mask_h_val[window_id-1] + "px" ;
	//alert($(dragDiv).style.left+","+$(dragDiv).style.top+","+$(dragDiv).style.width+","+$(dragDiv).style.height);
}

var first_show = new Array(0, 0, 0, 0);
var flag = 1;
function show_od_div(window_id)
{
	var timestamp = new Date();
	var img_url = "../img/snapshot.cgi?size="+res_idx+"&quality=1&ts="+timestamp.getTime();
	var tmp_url = img_url;
	$("privcay_mask").style.display = "block";
	
	var dragDiv = "dragDiv"+window_id;
	var rRight = "rRight"+window_id;
	var rLeft = "rLeft"+window_id;
	var rUp = "rUp"+window_id;
	var rDown = "rDown"+window_id;
	var rRightDown = "rRightDown"+window_id;
	var rLeftDown = "rLeftDown"+window_id;
	var rRightUp = "rRightUp"+window_id;
	var rLeftUp = "rLeftUp"+window_id;
	var text = "text"+window_id;
	
	var tmp_height = 240;
	if (cur_width*9 == cur_height*16)
	{
		tmp_height = img_height;
	}
	$("bgDiv").style.height = tmp_height;
	
	//alert("window_id-1="+(window_id-1)+", first_show="+first_show[window_id-1]);
	if (!first_show[window_id-1])
	{
		if (window_id == 4)
		{
			flag = 0;
		}
		first_show[window_id-1] = 1;
		ic = new ImgCropper("bgDiv", dragDiv, img_url, (window_id-1), flag, {
		Width: 320, Height: tmp_height, Color: "#EBEBEB",
		Resize: true,
		Right: rRight, Left: rLeft, Up:	rUp, Down: rDown,
		RightDown: rRightDown, LeftDown: rLeftDown, RightUp: rRightUp, LeftUp: rLeftUp})
	}
	else
	{
		ic.Url = img_url;
		ic.Init();
	}
	
	var od_switch = "od_switch"+window_id;
	var od_name = "od_name"+window_id;
	//alert(document.getElementById(od_switch).value);
	if (document.getElementById(od_switch).value == "1")
	{
		$(dragDiv).style.display = "block";
		$(rRight).style.display = "block";
		$(rLeft).style.display = "block";
		$(rUp).style.display = "block";
		$(rDown).style.display = "block";
		$(rRightDown).style.display = "block";
		$(rLeftDown).style.display = "block";
		$(rRightUp).style.display = "block";
		$(rLeftUp).style.display = "block";
		$(text).style.display = "block";
		$(text).innerHTML = document.getElementById(od_name).value;
	}
	else
	{
		$(dragDiv).style.display = "none";
		$(rRight).style.display = "none";
		$(rLeft).style.display = "none";
		$(rUp).style.display = "none";
		$(rDown).style.display = "none";
		$(rRightDown).style.display = "none";
		$(rLeftDown).style.display = "none";
		$(rRightUp).style.display = "none";
		$(rLeftUp).style.display = "none";
		$(text).style.display = "none";
	}
}

function check_od_window(window_id)
{
	var right_val = 0;
	var bottom_val = 0;
	
	//alert(window_id);
	//alert(mask_left_val[window_id-1]+","+mask_top_val[window_id-1]+","+mask_w_val[window_id-1]+","+mask_h_val[window_id-1]);
	var tmp_left = mask_left_val[window_id-1];
	var tmp_top = mask_top_val[window_id-1];
	var tmp_w = mask_w_val[window_id-1];
	var tmp_h = mask_h_val[window_id-1];
	
	if (tmp_top < 0)	{tmp_top = 0;}
	if (tmp_left < 0) {tmp_left = 0;}
	if (tmp_w < 0) {tmp_w = 0;}
	if (tmp_h < 0) {tmp_h = 0;}
	
	tmp_top = tmp_top*cur_width/320;
	tmp_left = tmp_left*cur_width/320;
	tmp_w = tmp_w*cur_width/320;
	tmp_h = tmp_h*cur_width/320;
        
	//alert(tmp_left+","+tmp_top+","+tmp_w+","+tmp_h);
	if (tmp_w <= 0) 
	{
		right_val = 0;
	}
	else
	{
		right_val = tmp_left + tmp_w;
	}
	if (tmp_h <= 0) 
	{
		bottom_val = 0;
	}
	else
	{
		bottom_val = tmp_top + tmp_h;
	}
	
	if (bottom_val > (cur_height-1)){bottom_val = cur_height-1;}
	if (right_val > (cur_width-1)) {right_val = cur_width-1;}
	if (tmp_top > (cur_height-1)) {tmp_top = cur_height-1;}
	if (tmp_left > (cur_width-1)) {tmp_left = cur_width-1;}
	//alert(tmp_left+","+tmp_top+","+right_val+","+bottom_val);
	
	tmp_left = parseInt(tmp_left);
	tmp_top = parseInt(tmp_top);
	right_val = parseInt(right_val);
	bottom_val = parseInt(bottom_val);
	//alert(tmp_left+","+tmp_top+","+right_val+","+bottom_val);
	
	var od_window = "od_window"+window_id;
	document.getElementById(od_window).value = tmp_left+","+tmp_top+","+right_val+","+bottom_val+"/"+cur_width+","+cur_height;
	//alert(document.getElementById(od_window).value);
}

function press_dir()
{
	netcamObj = document.Viewer;
	
	direct_pt_flag = !direct_pt_flag;

	DirectPT(direct_pt_flag);

	if (true == direct_pt_flag)
	{ document.images["dir"].src = "../buttons/dir_down.gif"; }
	else
	{ document.images["dir"].src = "../buttons/dir_over.gif"; }
	
}

function checkData()
{
	//set_type_value();
	var cf = document.forms[0];
	var msg = "";
	var i = 1;
    
	for (i = 1; i <= 4; i++)
	{
		check_od_window(i);
	}

	//return false;
	if (msg.length > 1)
	{
		alert(msg);
		return false;
	}
	var save = new GroupCtrl();
	var array_set=[
			["SYSTEM", "model_num", "model_num"],
			["IVA", "od_switch1", "od_switch1"],
			["IVA", "od_switch2", "od_switch2"],
			["IVA", "od_switch3", "od_switch3"],
			["IVA", "od_switch4", "od_switch4"],
			["IVA", "od_window1", "od_window1"],
			["IVA", "od_window2", "od_window2"],
			["IVA", "od_window3", "od_window3"],
			["IVA", "od_window4", "od_window4"],
			["IVA", "od_name1", "od_name1"],
			["IVA", "od_name2", "od_name2"],
			["IVA", "od_name3", "od_name3"],
			["IVA", "od_name4", "od_name4"],
	];
	save.set(array_set);	
	return true;
}

function enable_od_windows(value1,value2)
{ 
	var b = document.getElementsByName(value1);
	var a = document.getElementsByName(value2);
	//var c = document.getElementsByName(value3);
	var od_switch;
	
	if (b[0].checked)
	{
		for (var i = 0; i < a.length; i++) 
		{
			a[i].disabled = 0;
		}
		/*for (var i = 0; i < c.length; i++) 
		{
			c[i].disabled = 0;
		}*/
		for (var i = 1; i <= 4; i++)
		{
			if (parseInt(b[0].value) == i)
			{
				od_switch = "od_switch"+i;
				document.getElementById(od_switch).value = "1";
				show_od_div(i);	
			} 
		}
		//var od_switch=document.getElementById(od_switch)
	}
	else
	{
		for (var i = 0; i < a.length; i++) 
		{
			a[i].disabled = 1;
		}
		/*for (var i = 0; i < c.length; i++) 
		{
			c[i].disabled = 1;
		}*/
		for (i = 1; i <= 4; i++)
		{
			if (parseInt(b[0].value) == i)
			{
				od_switch = "od_switch"+i;
				document.getElementById(od_switch).value = "0";
				show_od_div(i);	
			}
		}
	}
}

/*function getvalue(value)
{
	var obj = document.getElementsByName(value);
	var sum = 0;
	for (var i = 0; i < obj.length; i++) 
	{	
		if (obj[i].checked)
		{
			sum = parseInt(sum)+parseInt(obj[i].value);
		}
	}
//	alert(sum);
	return sum;
}

function set_type_value()
{
	for (var i = 1; i <= 4; i++)
	{
		var detection_window = "detection_window"+i;
		if (document.getElementById(detection_window).checked)
		{
			var od_type = "od_type"+i;
			var type = "type"+i;
			var type_value = getvalue(type);					
			document.getElementById(od_type).value = type_value;
		}
	}
}*/

function refresh_pic()
{
	var timestamp = new Date();
	ic.Url = "../img/snapshot.cgi?size="+res_idx+"&quality=1&ts="+timestamp.getTime();
	ic.Init();
}

//Privcay Mask
var isIE = (document.all) ? true : false;
var isIE6 = isIE && ([/MSIE (\d)\.0/i.exec(navigator.userAgent)][0][1] == 6);


var $ = function (id) {
	return "string" == typeof id ? document.getElementById(id) : id;
};


var Class = 
{
	create: function() 
	{
		return function() { this.initialize.apply(this, arguments); }
	}
}

var Extend = function(destination, source) 
{
	for (var property in source) 
	{
		destination[property] = source[property];
	}
}

var Bind = function(object, fun) 
{
	return function() 
	{
		return fun.apply(object, arguments);
	}
}

var BindAsEventListener = function(object, fun) 
{
	var args = Array.prototype.slice.call(arguments).slice(2);
	return function(event) 
	{
		return fun.apply(object, [event || window.event].concat(args));
	}
}

var CurrentStyle = function(element)
{
	return element.currentStyle || document.defaultView.getComputedStyle(element, null);
}

function addEventHandler(oTarget, sEventType, fnHandler) 
{
	if (oTarget.addEventListener) 
	{
		oTarget.addEventListener(sEventType, fnHandler, false);
	} 
	else if (oTarget.attachEvent) 
	{
		oTarget.attachEvent("on" + sEventType, fnHandler);
	} 
	else 
	{
		oTarget["on" + sEventType] = fnHandler;
	}
};

function removeEventHandler(oTarget, sEventType, fnHandler) 
{
	if (oTarget.removeEventListener) 
	{
		oTarget.removeEventListener(sEventType, fnHandler, false);
	} 
	else if (oTarget.detachEvent) 
	{
		oTarget.detachEvent("on" + sEventType, fnHandler);
	} 
	else 
	{ 
		oTarget["on" + sEventType] = null;
	}
};


var Drag = Class.create();
Drag.prototype = {
  initialize: function(drag, options) {
	this.Drag = $(drag);
	this._x = this._y = 0;
	this._marginLeft = this._marginTop = 0;

	this._fM = BindAsEventListener(this, this.Move);
	this._fS = Bind(this, this.Stop);
	
	this.SetOptions(options);
	
	this.Limit = !!this.options.Limit;
	this.mxLeft = parseInt(this.options.mxLeft);
	this.mxRight = parseInt(this.options.mxRight);
	this.mxTop = parseInt(this.options.mxTop);
	this.mxBottom = parseInt(this.options.mxBottom);
	if (cur_width*9 == cur_height*16)
	{
		this.mxBottom = img_height;
	}
	
	this.LockX = !!this.options.LockX;
	this.LockY = !!this.options.LockY;
	this.Lock = !!this.options.Lock;
	
	this.onStart = this.options.onStart;
	this.onMove = this.options.onMove;
	this.onStop = this.options.onStop;
	
	this._Handle = $(this.options.Handle) || this.Drag;
	this._mxContainer = $(this.options.mxContainer) || null;
	
	this.Drag.style.position = "absolute";

	if(isIE && !!this.options.Transparent){
		with(this._Handle.appendChild(document.createElement("div")).style){
			width = height = "100%"; fontSize = 0;
		}
	}

	this.Repair();
	addEventHandler(this._Handle, "mousedown", BindAsEventListener(this, this.Start));
  },

  SetOptions: function(options) {
	this.options = {
		Handle:			"",
		Limit:			false,
		mxLeft:			0,
		mxRight:		320,
		mxTop:			0,
		mxBottom:		240,
		mxContainer:	"",
		LockX:			false,
		LockY:			false,
		Lock:			false,
		Transparent:	false,
		onStart:		function(){},
		onMove:			function(){},
		onStop:			function(){}
	};
	Extend(this.options, options || {});
  },

  Start: function(oEvent) {
	if(this.Lock){ return; }
	
	this.Drag.style.opacity = 0.5;
	this.Drag.style.filter = "alpha(opacity=50)";
	
	this.Repair();

	this._x = oEvent.clientX - this.Drag.offsetLeft;
	this._y = oEvent.clientY - this.Drag.offsetTop;

	this._marginLeft = parseInt(CurrentStyle(this.Drag).marginLeft) || 0;
	this._marginTop = parseInt(CurrentStyle(this.Drag).marginTop) || 0;

	addEventHandler(document, "mousemove", this._fM);
	addEventHandler(document, "mouseup", this._fS);
	if(isIE){
		addEventHandler(this._Handle, "losecapture", this._fS);
		this._Handle.setCapture();
	}else{
		addEventHandler(window, "blur", this._fS);
		oEvent.preventDefault();
	};
	this.onStart();
  },

  Repair: function() {
	if(this.Limit){
		this.mxRight = Math.max(this.mxRight, this.mxLeft + this.Drag.offsetWidth);
		this.mxBottom = Math.max(this.mxBottom, this.mxTop + this.Drag.offsetHeight);
		!this._mxContainer || CurrentStyle(this._mxContainer).position == "relative" || CurrentStyle(this._mxContainer).position == "absolute" || (this._mxContainer.style.position = "relative");
	}
  },

  Move: function(oEvent) {
	if(this.Lock){ this.Stop(); return; };
	window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
	var iLeft = oEvent.clientX - this._x, iTop = oEvent.clientY - this._y;
	if(this.Limit){
		var mxLeft = this.mxLeft, mxRight = this.mxRight, mxTop = this.mxTop, mxBottom = this.mxBottom;
		if(!!this._mxContainer){
			mxLeft = Math.max(mxLeft, 0);
			mxTop = Math.max(mxTop, 0);
			mxRight = Math.min(mxRight, this._mxContainer.clientWidth);
			mxBottom = Math.min(mxBottom, this._mxContainer.clientHeight);
		};
		iLeft = Math.max(Math.min(iLeft, mxRight - this.Drag.offsetWidth), mxLeft);
		iTop = Math.max(Math.min(iTop, mxBottom - this.Drag.offsetHeight), mxTop);
	}

	if(!this.LockX){ this.Drag.style.left = iLeft - this._marginLeft + "px"; }
	if(!this.LockY){ this.Drag.style.top = iTop - this._marginTop + "px"; }
	this.onMove();
  },

  Stop: function() {
	removeEventHandler(document, "mousemove", this._fM);
	removeEventHandler(document, "mouseup", this._fS);
	
	this.Drag.style.opacity = 1;
	this.Drag.style.filter = "alpha(opacity=100)";

	if(isIE){
		removeEventHandler(this._Handle, "losecapture", this._fS);
		this._Handle.releaseCapture();
	}else{
		removeEventHandler(window, "blur", this._fS);
	};
	this.onStop();
  }
};


var Resize = Class.create();
Resize.prototype = {
  initialize: function(obj, options) {
	this._obj = $(obj);
	
	this._styleWidth = this._styleHeight = this._styleLeft = this._styleTop = 0;
	this._sideRight = this._sideDown = this._sideLeft = this._sideUp = 0;
	this._fixLeft = this._fixTop = 0;
	this._scaleLeft = this._scaleTop = 0;
	
	this._mxSet = function(){};
	this._mxRightWidth = this._mxDownHeight = this._mxUpHeight = this._mxLeftWidth = 0;
	this._mxScaleWidth = this._mxScaleHeight = 0;
	
	this._fun = function(){};
	
	var _style = CurrentStyle(this._obj);
	this._borderX = (parseInt(_style.borderLeftWidth) || 0) + (parseInt(_style.borderRightWidth) || 0);
	this._borderY = (parseInt(_style.borderTopWidth) || 0) + (parseInt(_style.borderBottomWidth) || 0);
	this._fR = BindAsEventListener(this, this.Resize);
	this._fS = Bind(this, this.Stop);
	
	this.SetOptions(options);
	this.Max = !!this.options.Max;
	this._mxContainer = $(this.options.mxContainer) || null;
	this.mxLeft = Math.round(this.options.mxLeft);
	this.mxRight = Math.round(this.options.mxRight);
	this.mxTop = Math.round(this.options.mxTop);
	this.mxBottom = Math.round(this.options.mxBottom);
	if (cur_width*9 == cur_height*16)
	{
		this.mxBottom = Math.round(img_height);
	}
	this.Min = !!this.options.Min;
	this.minWidth = Math.round(this.options.minWidth);
	this.minHeight = Math.round(this.options.minHeight);
	this.Scale = !!this.options.Scale;
	this.Ratio = Math.max(this.options.Ratio, 0);
	this.onResize = this.options.onResize;
	
	this._obj.style.position = "absolute";
	!this._mxContainer || CurrentStyle(this._mxContainer).position == "relative" || (this._mxContainer.style.position = "relative");
  },
  SetOptions: function(options) {
    this.options = {
		Max:		false,
		mxContainer:"",
		mxLeft:		0,
		mxRight:	320,
		mxTop:		0,
		mxBottom:	240,
		Min:		false,
		minWidth:	50,
		minHeight:	50,
		Scale:		false,
		Ratio:		0,
		onResize:	function(){}
    };
    Extend(this.options, options || {});
  },
  Set: function(resize, side) {
	var resize = $(resize), fun;
	if(!resize) return;
	switch (side.toLowerCase()) {
	case "up" :
		fun = this.Up;
		break;
	case "down" :
		fun = this.Down;
		break;
	case "left" :
		fun = this.Left;
		break;
	case "right" :
		fun = this.Right;
		break;
	case "left-up" :
		fun = this.LeftUp;
		break;
	case "right-up" :
		fun = this.RightUp;
		break;
	case "left-down" :
		fun = this.LeftDown;
		break;
	case "right-down" :
	default :
		fun = this.RightDown;
	};
	addEventHandler(resize, "mousedown", BindAsEventListener(this, this.Start, fun));
  },
  Start: function(e, fun, touch) {
  
  	this._obj.style.opacity = 0.5;
	this._obj.style.filter = "alpha(opacity=50)";

	e.stopPropagation ? e.stopPropagation() : (e.cancelBubble = true);
	this._fun = fun;
	if(isIE){
    	this._styleWidth = this._obj.offsetWidth;
    	this._styleHeight = this._obj.offsetHeight;
    	this._styleLeft = this._obj.offsetLeft;
    	this._styleTop = this._obj.offsetTop;
	}else{
    	this._styleWidth = this._obj.clientWidth;
    	this._styleHeight = this._obj.clientHeight;
    	this._styleLeft = this._obj.offsetLeft;
    	this._styleTop = this._obj.offsetTop;
	};
	this._sideLeft = e.clientX - this._styleWidth;
	this._sideRight = e.clientX + this._styleWidth;
	this._sideUp = e.clientY - this._styleHeight;
	this._sideDown = e.clientY + this._styleHeight;
	this._fixLeft = this._styleLeft + this._styleWidth;
	this._fixTop = this._styleTop + this._styleHeight;
	if(this.Scale){
		this.Ratio = Math.max(this.Ratio, 0) || this._styleWidth / this._styleHeight;
		this._scaleLeft = this._styleLeft + this._styleWidth / 2;
		this._scaleTop = this._styleTop + this._styleHeight / 2;
	};

	if(this.Max){
		var mxLeft = this.mxLeft, mxRight = this.mxRight, mxTop = this.mxTop, mxBottom = this.mxBottom;

		if(!!this._mxContainer){
			mxLeft = Math.max(mxLeft, 0);
			mxTop = Math.max(mxTop, 0);
			mxRight = Math.min(mxRight, this._mxContainer.clientWidth);
			mxBottom = Math.min(mxBottom, this._mxContainer.clientHeight);
		};
		mxRight = Math.max(mxRight, mxLeft + (this.Min ? this.minWidth : 0) + this._borderX);
		mxBottom = Math.max(mxBottom, mxTop + (this.Min ? this.minHeight : 0) + this._borderY);

		this._mxSet = function(){
			this._mxRightWidth = mxRight - this._styleLeft ;
			this._mxDownHeight = mxBottom - this._styleTop ;
			this._mxUpHeight = Math.max(this._fixTop - mxTop, this.Min ? this.minHeight : 0);
			this._mxLeftWidth = Math.max(this._fixLeft - mxLeft, this.Min ? this.minWidth : 0);
		};
		this._mxSet();
		if(this.Scale){
			this._mxScaleWidth = Math.min(this._scaleLeft - mxLeft, mxRight - this._scaleLeft ) * 2;
			this._mxScaleHeight = Math.min(this._scaleTop - mxTop, mxBottom - this._scaleTop) * 2;
		};
	};

	addEventHandler(document, "mousemove", this._fR);
	addEventHandler(document, "mouseup", this._fS);
	if(isIE){
		addEventHandler(this._obj, "losecapture", this._fS);
		this._obj.setCapture();
	}else{
		addEventHandler(window, "blur", this._fS);
		e.preventDefault();
	};
  },

  Resize: function(e) {
	window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
	this._fun(e);

	with(this._obj.style){
		width = this._styleWidth + "px"; height = this._styleHeight + "px";
		top = this._styleTop + "px"; left = this._styleLeft + "px";
	}
	this.onResize();
  },

  Up: function(e) {
	this.RepairY(this._sideDown - e.clientY, this._mxUpHeight);
	this.RepairTop();
	this.TurnDown(this.Down);
  },

  Down: function(e) {
	this.RepairY(e.clientY - this._sideUp, this._mxDownHeight);
	this.TurnUp(this.Up);
  },

  Right: function(e) {
	this.RepairX(e.clientX - this._sideLeft, this._mxRightWidth);
	this.TurnLeft(this.Left);
  },

  Left: function(e) {
	this.RepairX(this._sideRight - e.clientX, this._mxLeftWidth);
	this.RepairLeft();
	this.TurnRight(this.Right);
  },

  RightDown: function(e) {
	this.RepairAngle(
		e.clientX - this._sideLeft, this._mxRightWidth,
		e.clientY - this._sideUp, this._mxDownHeight
	);
	this.TurnLeft(this.LeftDown) || this.Scale || this.TurnUp(this.RightUp);
  },

  RightUp: function(e) {
	this.RepairAngle(
		e.clientX - this._sideLeft, this._mxRightWidth,
		this._sideDown - e.clientY, this._mxUpHeight
	);
	this.RepairTop();
	this.TurnLeft(this.LeftUp) || this.Scale || this.TurnDown(this.RightDown);
  },

  LeftDown: function(e) {
	this.RepairAngle(
		this._sideRight - e.clientX, this._mxLeftWidth,
		e.clientY - this._sideUp, this._mxDownHeight
	);
	this.RepairLeft();
	this.TurnRight(this.RightDown) || this.Scale || this.TurnUp(this.LeftUp);
  },

  LeftUp: function(e) {
	this.RepairAngle(
		this._sideRight - e.clientX, this._mxLeftWidth,
		this._sideDown - e.clientY, this._mxUpHeight
	);
	this.RepairTop(); this.RepairLeft();
	this.TurnRight(this.RightUp) || this.Scale || this.TurnDown(this.LeftDown);
  },

  RepairX: function(iWidth, mxWidth) {
	iWidth = this.RepairWidth(iWidth, mxWidth);
	if(this.Scale){
		var iHeight = this.RepairScaleHeight(iWidth);
		if(this.Max && iHeight > this._mxScaleHeight){
			iHeight = this._mxScaleHeight;
			iWidth = this.RepairScaleWidth(iHeight);
		}else if(this.Min && iHeight < this.minHeight){
			var tWidth = this.RepairScaleWidth(this.minHeight);
			if(tWidth < mxWidth){ iHeight = this.minHeight; iWidth = tWidth; }
		}
		this._styleHeight = iHeight;
		this._styleTop = this._scaleTop - iHeight / 2;
	}
	this._styleWidth = iWidth;
  },

  RepairY: function(iHeight, mxHeight) {
	iHeight = this.RepairHeight(iHeight, mxHeight);
	if(this.Scale){
		var iWidth = this.RepairScaleWidth(iHeight);
		if(this.Max && iWidth > this._mxScaleWidth){
			iWidth = this._mxScaleWidth;
			iHeight = this.RepairScaleHeight(iWidth);
		}else if(this.Min && iWidth < this.minWidth){
			var tHeight = this.RepairScaleHeight(this.minWidth);
			if(tHeight < mxHeight){ iWidth = this.minWidth; iHeight = tHeight; }
		}
		this._styleWidth = iWidth;
		this._styleLeft = this._scaleLeft - iWidth / 2;
	}
	this._styleHeight = iHeight;
  },

  RepairAngle: function(iWidth, mxWidth, iHeight, mxHeight) {
	iWidth = this.RepairWidth(iWidth, mxWidth);	
	if(this.Scale){
		iHeight = this.RepairScaleHeight(iWidth);
		if(this.Max && iHeight > mxHeight){
			iHeight = mxHeight;
			iWidth = this.RepairScaleWidth(iHeight);
		}else if(this.Min && iHeight < this.minHeight){
			var tWidth = this.RepairScaleWidth(this.minHeight);
			if(tWidth < mxWidth){ iHeight = this.minHeight; iWidth = tWidth; }
		}
	}else{
		iHeight = this.RepairHeight(iHeight, mxHeight);
	}
	this._styleWidth = iWidth;
	this._styleHeight = iHeight;
  },

  RepairTop: function() {
	this._styleTop = this._fixTop - this._styleHeight;
  },

  RepairLeft: function() {
	this._styleLeft = this._fixLeft - this._styleWidth;
  },

  RepairHeight: function(iHeight, mxHeight) {
	iHeight = Math.min(this.Max ? mxHeight : iHeight, iHeight);
	iHeight = Math.max(this.Min ? this.minHeight : iHeight, iHeight, 0);
	return iHeight;
  },

  RepairWidth: function(iWidth, mxWidth) {
	iWidth = Math.min(this.Max ? mxWidth : iWidth, iWidth);
	iWidth = Math.max(this.Min ? this.minWidth : iWidth, iWidth, 0);
	return iWidth;
  },

  RepairScaleHeight: function(iWidth) {
	return Math.max(Math.round((iWidth + this._borderX) / this.Ratio - this._borderY), 0);
  },

  RepairScaleWidth: function(iHeight) {
	return Math.max(Math.round((iHeight + this._borderY) * this.Ratio - this._borderX), 0);
  },

  TurnRight: function(fun) {
	if(!(this.Min || this._styleWidth)){
		this._fun = fun;
		this._sideLeft = this._sideRight;
		this.Max && this._mxSet();
		return true;
	}
  },

  TurnLeft: function(fun) {
	if(!(this.Min || this._styleWidth)){
		this._fun = fun;
		this._sideRight = this._sideLeft;
		this._fixLeft = this._styleLeft;
		this.Max && this._mxSet();
		return true;
	}
  },

  TurnUp: function(fun) {
	if(!(this.Min || this._styleHeight)){
		this._fun = fun;
		this._sideDown = this._sideUp;
		this._fixTop = this._styleTop;
		this.Max && this._mxSet();
		return true;
	}
  },

  TurnDown: function(fun) {
	if(!(this.Min || this._styleHeight)){
		this._fun = fun;
		this._sideUp = this._sideDown;
		this.Max && this._mxSet();
		return true;
	}
  },

  Stop: function() {
	removeEventHandler(document, "mousemove", this._fR);
	removeEventHandler(document, "mouseup", this._fS);
	this._obj.style.opacity = 1;
	this._obj.style.filter = "alpha(opacity=100)";
	if(isIE){
		removeEventHandler(this._obj, "losecapture", this._fS);
		this._obj.releaseCapture();
	}else{
		removeEventHandler(window, "blur", this._fS);
	}
  }
};


var ImgCropper = Class.create();
ImgCropper.prototype = 
{
  initialize: function(container, handle, url, id, flag, options) 
  {
		this._Container = $(container);
		this._layHandle = $(handle);
		this.Url = url;
		if (flag)
		{
			this.Url = "";
		}
		this.id = id;
		
		this._layBase = this._Container.appendChild(document.createElement("img"));
		this._layCropper = this._Container.appendChild(document.createElement("img"));
		this._layCropper.onload = Bind(this, this.SetPos);

		this._tempImg = document.createElement("img");
		this._tempImg.onload = Bind(this, this.SetSize);
	
		this.SetOptions(options);
	
		this.Opacity = Math.round(this.options.Opacity);
		this.Color = this.options.Color;
		this.Scale = !!this.options.Scale;
		this.Ratio = Math.max(this.options.Ratio, 0);
		this.Width = Math.round(this.options.Width);
		this.Height = Math.round(this.options.Height);
		this._drag = new Drag(this._layHandle, { Limit: true, onMove: Bind(this, this.SetPos), Transparent: true });
		this.Resize = !!this.options.Resize;
		if(this.Resize)
		{
			var op = this.options, _resize = new Resize(this._layHandle, { Max: true, onResize: Bind(this, this.SetPos) });

			op.RightDown && (_resize.Set(op.RightDown, "right-down"));
			op.LeftDown && (_resize.Set(op.LeftDown, "left-down"));
			op.RightUp && (_resize.Set(op.RightUp, "right-up"));
			op.LeftUp && (_resize.Set(op.LeftUp, "left-up"));
			op.Right && (_resize.Set(op.Right, "right"));
			op.Left && (_resize.Set(op.Left, "left"));
			op.Down && (_resize.Set(op.Down, "down"));
			op.Up && (_resize.Set(op.Up, "up"));

			this.Min = !!this.options.Min;
			this.minWidth = Math.round(this.options.minWidth);
			this.minHeight = Math.round(this.options.minHeight);

			this._resize = _resize;
		}

		this._Container.style.position = "relative";
		//this._Container.style.overflow = "hidden";
		this._layHandle.style.zIndex = 200;
		this._layCropper.style.zIndex = 100;
		this._layBase.style.position = this._layCropper.style.position = "absolute";
		if (flag)
		{
			this.Url = "";
		}
		if (isIE)
		{
			this._Container.style.width = 320;
			this._Container.style.height = 240;
			if (cur_width*9 == cur_height*16)
			{
				this._Container.style.height = img_height;
			}
		}
		this._layBase.style.top = this._layBase.style.left = this._layCropper.style.top = this._layCropper.style.left = 0;
		this.Init();
 },

  SetOptions: function(options) 
  {
    this.options = {
			Opacity:	100,
			Color:		"",
			Width:		0,
			Height:		0,
			Resize:		false,
			Right:		"",
			Left:		"",
			Up:			"",
			Down:		"",
			RightDown:	"",
			LeftDown:	"",
			RightUp:	"",
			LeftUp:		"",
			Min:		false,
			minWidth:	50,
			minHeight:	50,
			Scale:		false,
			Ratio:		0
    };
    Extend(this.options, options || {});
},

  Init: function() 
 	{
		this.Color && (this._Container.style.backgroundColor = this.Color);
		this._layCropper.src = "";
		this._layCropper.style.display = "none";
		this._tempImg.src = this._layBase.src = this.Url;
		if(isIE)
		{
			this._layBase.style.filter = "alpha(opacity:" + this.Opacity + ")";
		} 
		else 
		{
			this._layBase.style.opacity = this.Opacity / 100;
		}
  },
  SetPos: function() 
  {
		if(isIE6){ with(this._layHandle.style){ zoom = 0.9; zoom = 1; }; };
		var p = this.GetPos();
		
		//alert(p.Top+","+p.Left+","+p.Width+","+p.Height);
		//$("idTop").value = p.Top;
		//$("idLeft").value = p.Left;
		//$("idWidth").value = p.Width;
		//$("idHeight").value = +p.Height;		
		mask_top_val[this.id] = p.Top;
		mask_left_val[this.id] = p.Left;
		mask_w_val[this.id] = p.Width;
		mask_h_val[this.id] = p.Height;
		
		this._layCropper.style.clip = "rect(" + p.Top + "px " + (p.Left + p.Width) + "px " + (p.Top + p.Height) + "px " + p.Left + "px)";
  },
  SetSize: function() {
	var s = this.GetSize(this._tempImg.width, this._tempImg.height, this.Width, this.Height);
	this._layBase.style.width = this._layCropper.style.width = s.Width + "px";
	this._layBase.style.height = this._layCropper.style.height = s.Height + "px";
	this._drag.mxRight = s.Width; this._drag.mxBottom = s.Height;
	if(this.Resize){ this._resize.mxRight = s.Width; this._resize.mxBottom = s.Height; }
  },
  GetPos: function() {
	with(this._layHandle)
	{
		if(isIE)
		{
			var div_width = offsetWidth;
			var div_height = offsetHeight;
			if (style.display == "none")
			{
				style.display = "block";
				div_width = offsetWidth;
				div_height = offsetHeight;
				style.display = "none";
			}
    		return { Top: parseInt(style.top), Left: parseInt(style.left), Width: div_width, Height: div_height }
		} 
		else 
		{
			var div_width = clientWidth;
			var div_height = clientHeight;
			if (style.display == "none")
			{
				style.display = "block";
				div_width = clientWidth;
				div_height = clientHeight;
				style.display = "none";
			}
    		return { Top: (parseInt(style.top)), Left: (parseInt(style.left)), Width: div_width, Height: div_height }
		}
	}
  },

  GetSize: function(nowWidth, nowHeight, fixWidth, fixHeight) {
	var iWidth = nowWidth, iHeight = nowHeight, scale = iWidth / iHeight;

	if(fixHeight){ iWidth = (iHeight = fixHeight) * scale; }
	if(fixWidth && (!fixHeight || iWidth > fixWidth)){ iHeight = (iWidth = fixWidth) / scale; }

	return { Width: iWidth, Height: iHeight }
  }
}
//solid
// End Script -->
</script>

</head>

<style type="text/css">
#bgDiv{width:320px; height:240px; border:1px solid #666666; position:relative;}

#rRightDown1,#rLeftDown1,#rLeftUp1,#rRightUp1,#rRight1,#rLeft1,#rUp1,#rDown1{
	position:absolute;
	background:#03F;
	border: 1px solid #333;
	width: 4px;
	height: 4px;
	z-index:500;
	font-size:0;
	opacity: 1;
	filter:alpha(opacity=100);
}



#rLeftDown1,#rRightUp1{cursor:ne-resize;}
#rRightDown1,#rLeftUp1{cursor:nw-resize;}
#rRight1,#rLeft1{cursor:e-resize;}
#rUp1,#rDown1{cursor:n-resize;}

#rLeftDown1{left:-2px;bottom:-2px;}
#rRightUp1{right:-2px;top:-2px;}
#rRightDown1{right:-2px;bottom:-2px;}
#rLeftUp1{left:-2px;top:-2px;}
#rRight1{right:-2px;top:50%;margin-top:-2px;}
#rLeft1{left:-2px;top:50%;margin-top:-2px;}
#rUp1{top:-2px;left:50%;margin-left:-2px;}
#rDown1{bottom:-2px;left:50%;margin-left:-2px;}

#dragDiv1{border:1px solid #03F; width:100px; height:75px; top:83px; left:110px; cursor:move; opacity:1; filter:alpha(opacity=100); 
			background-color:transparent; display:none; }


#rRightDown2,#rLeftDown2,#rLeftUp2,#rRightUp2,#rRight2,#rLeft2,#rUp2,#rDown2{
	position:absolute;
	background:#03F;
	border: 1px solid #333;
	width: 4px;
	height: 4px;
	z-index:500;
	font-size:0;
	opacity: 1;
	filter:alpha(opacity=100);
}

#rLeftDown2,#rRightUp2{cursor:ne-resize;}
#rRightDown2,#rLeftUp2{cursor:nw-resize;}
#rRight2,#rLeft2{cursor:e-resize;}
#rUp2,#rDown2{cursor:n-resize;}

#rLeftDown2{left:-2px;bottom:-2px;}
#rRightUp2{right:-2px;top:-2px;}
#rRightDown2{right:-2px;bottom:-2px;}
#rLeftUp2{left:-2px;top:-2px;}
#rRight2{right:-2px;top:50%;margin-top:-2px;}
#rLeft2{left:-2px;top:50%;margin-top:-2px;}
#rUp2{top:-2px;left:50%;margin-left:-2px;}
#rDown2{bottom:-2px;left:50%;margin-left:-2px;}

#dragDiv2{border:1px solid #03F; width:100px; height:75px; top:83px; left:110px; cursor:move; opacity:1; filter:alpha(opacity=100); 
			background-color: transparent; display:none; }


#rRightDown3,#rLeftDown3,#rLeftUp3,#rRightUp3,#rRight3,#rLeft3,#rUp3,#rDown3{
	position:absolute;
	background:#03F;
	border: 1px solid #333;
	width: 4px;
	height: 4px;
	z-index:500;
	font-size:0;
	opacity: 1;
	filter:alpha(opacity=100);
}

#rLeftDown3,#rRightUp3{cursor:ne-resize;}
#rRightDown3,#rLeftUp3{cursor:nw-resize;}
#rRight3,#rLeft3{cursor:e-resize;}
#rUp3,#rDown3{cursor:n-resize;}

#rLeftDown3{left:-2px;bottom:-2px;}
#rRightUp3{right:-2px;top:-2px;}
#rRightDown3{right:-2px;bottom:-2px;}
#rLeftUp3{left:-2px;top:-2px;}
#rRight3{right:-2px;top:50%;margin-top:-2px;}
#rLeft3{left:-2px;top:50%;margin-top:-2px;}
#rUp3{top:-2px;left:50%;margin-left:-2px;}
#rDown3{bottom:-2px;left:50%;margin-left:-2px;}

#dragDiv3{border:1px solid #03F; width:100px; height:75px; top:83px; left:110px; cursor:move; opacity:1; filter:alpha(opacity=100); 
			background-color: transparent; display:none; }


#rRightDown4,#rLeftDown4,#rLeftUp4,#rRightUp4,#rRight4,#rLeft4,#rUp4,#rDown4{
	position:absolute;
	background:#03F;
	border: 1px solid #333;
	width: 4px;
	height: 4px;
	z-index:500;
	font-size:0;
	opacity: 1;
	filter:alpha(opacity=100);
}

#rLeftDown4,#rRightUp3{cursor:ne-resize;}
#rRightDown4,#rLeftUp3{cursor:nw-resize;}
#rRight4,#rLeft4{cursor:e-resize;}
#rUp4,#rDown4{cursor:n-resize;}

#rLeftDown4{left:-2px;bottom:-2px;}
#rRightUp4{right:-2px;top:-2px;}
#rRightDown4{right:-2px;bottom:-2px;}
#rLeftUp4{left:-2px;top:-2px;}
#rRight4{right:-2px;top:50%;margin-top:-2px;}
#rLeft4{left:-2px;top:50%;margin-top:-2px;}
#rUp4{top:-2px;left:50%;margin-left:-2px;}
#rDown4{bottom:-2px;left:50%;margin-left:-2px;}

#dragDiv4{border:1px solid #03F; width:100px; height:75px; top:83px; left:110px; cursor:move; opacity:1; filter:alpha(opacity=100); 
			background-color: transparent; display:none; }

</style>

<body onLoad="init();">
<form name="m_detect" method="post" action="file.cgi" >

<div ID="headimage">
<table border=0 cellspacing=0 cellpadding=10 class="toptab">
<tr>
	<td nowrap height="75" align="right" valign="top"></td>
</tr>
</table>
<div   ID="topimage" >	
<img src="../header.gif" alt="" border="0">
</div>
<div ID="topmodel"><a name="model_num"></a></div>
</div>

<div ID="topmenu">
<a href="../main.cgi?next_file=index.htm" class="topmenulink" target="_top">Home</a>
<strong>|</strong>
<a href="../img/main.cgi?next_file=main.htm" class="topmenulink" target="_top">View Video</a>
<strong>|</strong>
<a href="../logout.htm" class="topmenulink" target="_top">Logout</a>
</div>


<div ID="mubd">
<table class="maintab2" cellspacing="0">
<tr> 
 <td nowrap valign="top" class="menutd">
 	<IFRAME NAME="menuframe" allowTransparency="true" SRC="menu.htm" scrolling="no" frameborder="0" align="left" class="imu"></iframe> 
 	</td>
 <td nowrap valign="top">

<table class="maintab3" cellspacing="0">
<tr>  <!-- layout row, adds spacing below heading -->
 <td class="leftspacer"> </td>
 <td class="rightspacer"> </td>
</tr> 

<tr>
<td width="2px" nowrap="nowrap"></td>
<td height="10px" class="subhead">&nbsp; Set Detection Areas</td>
<td width="2px" nowrap="nowrap"></td>
</tr>
<tr>
<td width="2px" nowrap="nowrap"></td>
<td id="content_td" nowrap="nowrap" valign="top">
<!--content put there-->
<div id="scroll" style="overflow-y:hidden;">

<table cellpadding="0" cellspacing="0" style="margin-left:5px; margin-top:10px;height:450px; z-index:10">

<tr>

<!--start left panel--> 
<td valign="top">
<table cellpadding="0" cellspacing="0" style="width:220px">
<!--start window1-->
<tr>
<td> 
<div id="motion_area_1" style="margin-top:20px;">
<table border="0" cellpadding="0" cellspacing="0">
 
<tr>
<td class="control" colspan='3' align="left" valign="top">
<input type="checkbox" NAME="en_window1" VALUE="1" id="detection_window1" onClick="enable_od_windows('en_window1','direction1');">
<input type="text" id="window_name1" size="10" maxlength="12" style="height:20;width:165;font-size:9pt;margin-bottom:7px;" value="" onBlur="set_window_name(1);">
</td>
</tr>

<!--tr>
<td>
<label style="font-size:13px; margin-left:10px" align="left">Type:</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type1" VALUE="3" disabled="true" onClick="set_od_direction_by_type(1);">Motion</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type1" VALUE="1" disabled="true" onClick="set_od_direction_by_type(1);">People</label>
</td>
</tr-->
 
</table>
</div>
</td>
</tr>
<!--end window1-->

<!--start window2-->
<tr>
<td> 
<div id="motion_area_2" style="margin-top:20px;">
<table border="0" cellpadding="0" cellspacing="0">
 
<tr>
<td class="control" colspan='3' align="left" valign="top">
<input type="checkbox" NAME="en_window2" VALUE="2" id="detection_window2" onClick="enable_od_windows('en_window2','direction2');">
<input type="text" id="window_name2" size="10" maxlength="12" style="height:20;width:165;font-size:9pt;margin-bottom:7px;" value="" onBlur="set_window_name(2);">
</td>
</tr>

<!--tr>
<td>
<label style="font-size:13px; margin-left:10px" align="left">Type:</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type2" VALUE="3" disabled="true" onClick="set_od_direction_by_type(2);">Motion</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type2" VALUE="1" disabled="true" onClick="set_od_direction_by_type(2);">People</label>
</td>
</tr-->
 
</table>
</div>
</td>
</tr>
<!--end window2-->

<!--start window3-->
<tr>
<td> 
<div id="motion_area_3" style="margin-top:20px;">
<table border="0" cellpadding="0" cellspacing="0">
 
<tr>
<td class="control" colspan='3' align="left" valign="top">
<input type="checkbox" NAME="en_window3" VALUE="3" id="detection_window3" onClick="enable_od_windows('en_window3','direction3');">
<input type="text" id="window_name3" size="10" maxlength="12" style="height:20;width:165;font-size:9pt;margin-bottom:7px;" value="" onBlur="set_window_name(3);">
</td>
</tr>

<!--tr>
<td>
<label style="font-size:13px; margin-left:10px" align="left">Type:</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type3" VALUE="3" disabled="true" onClick="set_od_direction_by_type(3);">Motion</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type3" VALUE="1" disabled="true" onClick="set_od_direction_by_type(3);">People</label>
</td>
</tr-->
 
</table>
</div>
</td>
</tr>
<!--end window3-->

<!--start window4-->
<tr>
<td> 
<div id="motion_area_4" style="margin-top:20px;">
<table border="0" cellpadding="0" cellspacing="0">
 
<tr>
<td class="control" colspan='3' align="left" valign="top">
<input type="checkbox" NAME="en_window4" VALUE="4" id="detection_window4" onClick="enable_od_windows('en_window4','direction4');">
<input type="text" id="window_name4" size="10" maxlength="12" style="height:20;width:165;font-size:9pt;margin-bottom:7px;" value="" onBlur="set_window_name(4);">
</td>
</tr>

<!--tr>
<td>
<label style="font-size:13px; margin-left:10px" align="left">Type:</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type4" VALUE="3" disabled="true" onClick="set_od_direction_by_type(4);">Motion</label>
</td>
<td class="control" align="left">
<label><input type="radio" NAME="type4" VALUE="1" disabled="true" onClick="set_od_direction_by_type(4);">People</label>
</td>
</tr-->

</table>
</div>
</td>
</tr>
<!--end window4-->
  
</table>
</td>
<!--end left panel-->

 <td width="100%" valign="top">
 <table cellspacing="0" cellpadding="0" style="margin:10px 0px 0px 30px">
<tr>
 <td width="400px" height="300px" valign="top" align="center">
 <!-- add here -->
 <div id="privcay_mask" style="display:block">
	<table  align="left">
		<tr>
		<td width = "12%"></td>
			<td width = "57%">
				<table border="0" cellspacing="0" >
					<tr>
						<td colspan="3">
							<div id="bgDiv">
								<div id="dragDiv1" style="display:none">
									<div id="text1" style="display:none"></div>
									<div id="rRightDown1" style="display:none"> </div>
									<div id="rLeftDown1" style="display:none"> </div>
									<div id="rRightUp1" style="display:none"> </div>
									<div id="rLeftUp1" style="display:none"> </div>
									<div id="rRight1" style="display:none"> </div>
									<div id="rLeft1" style="display:none"> </div>
									<div id="rUp1" style="display:none"> </div>
									<div id="rDown1" style="display:none"></div>
								</div>
								<div id="dragDiv2" style="display:none">
									<div id="text2" style="display:none"></div>
									<div id="rRightDown2" style="display:none"> </div>
									<div id="rLeftDown2" style="display:none"> </div>
									<div id="rRightUp2" style="display:none"> </div>
									<div id="rLeftUp2" style="display:none"> </div>
									<div id="rRight2" style="display:none"> </div>
									<div id="rLeft2" style="display:none"> </div>
									<div id="rUp2" style="display:none"> </div>
									<div id="rDown2" style="display:none"></div>
								</div>
								<div id="dragDiv3" style="display:none">
									<div id="text3" style="display:none"></div>
									<div id="rRightDown3" style="display:none"> </div>
									<div id="rLeftDown3" style="display:none"> </div>
									<div id="rRightUp3" style="display:none"> </div>
									<div id="rLeftUp3" style="display:none"> </div>
									<div id="rRight3" style="display:none"> </div>
									<div id="rLeft3" style="display:none"> </div>
									<div id="rUp3" style="display:none"> </div>
									<div id="rDown3" style="display:none"></div>
								</div>
								<div id="dragDiv4" style="display:none">
									<div id="text4" style="display:none"></div>
									<div id="rRightDown4" style="display:none"> </div>
									<div id="rLeftDown4" style="display:none"> </div>
									<div id="rRightUp4" style="display:none"> </div>
									<div id="rLeftUp4" style="display:none"> </div>
									<div id="rRight4" style="display:none"> </div>
									<div id="rLeft4" style="display:none"> </div>
									<div id="rUp4" style="display:none"> </div>
									<div id="rDown4" style="display:none"> </div>
								</div>
							</div>	
						</td>
					</tr>
										
					<tr>
						<td height="25px"></td>
					</tr>	
					<tr>
						<td align="center" style="margin-top:20px">
							<input id="idImg"  type="button" value="Refresh  Image" onclick ="init()" />
						</td>
					</tr>	  
				</table>    
			</td>
			<td width = "35%"></td>
		 </tr>
	</table>
</div>
 

 </td>
 </tr>
 </table>
</td> <!-- End of Right Motion -->
 
</tr>
</table>
</div>
</td>
<td width="2px" nowrap="nowrap"></td>
</tr>
<tr >
<td width="2px" nowrap="nowrap"></td>
<td align="center">
<table id="button_table" cellpadding="0" cellspacing="0" style="margin-left:20px; position:relative;">
<tr>
<td style="padding-left:25px">
<input type="button" name="save" class="stdbuttton" value=" Save " onClick="checkData()">
</td>

<td style="padding-left:20px">

<input name="save" type="reset" class="stdbuttton" id="button_font_cancel" value="Cancel" onClick="setTimeout('init()',250)">
</td>

<td style="padding-left:20px">
 <input type="button" class="stdbuttton" name="help" value=" Help " onClick="openHelpWin('hlp_md.htm')"> 
</td>




</tr>

</table>
</td>
<td width="2px"  nowrap="nowrap"></td>
</tr>

<tr>
<td width="2px"  nowrap="nowrap">
</td>
<td height="10px" nowrap="nowrap">
</td>
<td width="2px"  nowrap="nowrap">
</td>
</tr>
</table>
</td>
</tr>
</table>
</div>  <!-- pagemain -->
<input type="Hidden" id="od_switch1" name="od_switch1" value="">
<input type="Hidden" id="od_switch2" name="od_switch2" value="">
<input type="Hidden" id="od_switch3" name="od_switch3" value="">
<input type="Hidden" id="od_switch4" name="od_switch4" value="">

<input type="Hidden" id="od_window1" name="od_window1" value="">
<input type="Hidden" id="od_window2" name="od_window2" value="">
<input type="Hidden" id="od_window3" name="od_window3" value="">
<input type="Hidden" id="od_window4" name="od_window4" value="">

<input type="Hidden" id="od_name1" name="od_name1" value="">
<input type="Hidden" id="od_name2" name="od_name2" value="">
<input type="Hidden" id="od_name3" name="od_name3" value="">
<input type="Hidden" id="od_name4" name="od_name4" value="">

<input type="Hidden" id="aspect_ratio" name="aspect_ratio" value="">

<input type="Hidden" name="todo" value="connect">
<input type="Hidden" name="this_file" value="iva_detect.htm"> 
<input type="Hidden" name="next_file" value="iva_detect.htm">
</form>

<div id="savecgi" style="visibility:hidden"></div>

<script> var msgVar="@message#"; </script>

</body>

</html>
